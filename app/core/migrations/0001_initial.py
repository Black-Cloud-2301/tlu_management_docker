# Generated by Django 4.0.3 on 2022-03-10 00:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('cccd', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('tel', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Nam'), ('Female', 'Nữ')], max_length=6, null=True)),
                ('avatar', models.FileField(default='avatar.svg', null=True, upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicDepartment',
            fields=[
                ('id', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('desc', models.TextField(blank=True, null=True)),
                ('dean', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('desc', models.TextField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.academicdepartment')),
            ],
        ),
        migrations.CreateModel(
            name='Student_Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.course')),
            ],
        ),
        migrations.CreateModel(
            name='StudyTime',
            fields=[
                ('id', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('semester', models.IntegerField(choices=[(1, 'Học kỳ 1'), (2, 'Học kỳ 2'), (3, 'Học kỳ 3')])),
                ('group', models.IntegerField(choices=[(1, 'Nhóm 1'), (2, 'Nhóm 2'), (3, 'Nhóm 3')])),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('credit', models.IntegerField()),
                ('hour', models.IntegerField(blank=True, null=True)),
                ('coefficient', models.FloatField()),
                ('prerequisite', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('street', models.CharField(blank=True, max_length=200, null=True)),
                ('ward', models.CharField(blank=True, max_length=200, null=True)),
                ('district', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('student_course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.student_course')),
                ('mid_term_grade', models.FloatField(default=-1)),
                ('final_grade', models.FloatField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('user__id',),
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('salary', models.BigIntegerField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.academicdepartment')),
            ],
            options={
                'ordering': ('user__id',),
            },
        ),
        migrations.CreateModel(
            name='Teacher_Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.teacher')),
            ],
            options={
                'unique_together': {('teacher', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='MajorClass',
            fields=[
                ('id', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('academic_year', models.IntegerField(blank=True, default=32, null=True)),
                ('english_level', models.CharField(blank=True, choices=[('a', 'level 8'), ('b', 'level 7'), ('c', 'level 6'), ('d', 'level 5'), ('e', 'level 4'), ('f', 'level 3'), ('g', 'level 2'), ('h', 'level 1')], max_length=1, null=True)),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.major')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.teacher')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='study_time',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.studytime'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher_subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teacher_subject'),
        ),
        migrations.CreateModel(
            name='AdminstrationDepartment',
            fields=[
                ('id', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('desc', models.TextField(blank=True, null=True)),
                ('manager', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='student_course',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student'),
        ),
        migrations.AddField(
            model_name='student',
            name='major_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.majorclass'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_date', models.DateTimeField(auto_created=True)),
                ('amount', models.BigIntegerField()),
                ('study_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.studytime')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'study_time')},
            },
        ),
        migrations.CreateModel(
            name='Major_Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_type', models.CharField(blank=True, choices=[('GE', 'Giáo dục đại cương'), ('FS', 'Học phần cơ sở'), ('CS', 'Học phần bắt buộc'), ('ES', 'Học phần lựa chọn'), ('IG', 'Thực tập, khóa luận, chuyên đề tốt nghiệp')], max_length=200, null=True)),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.major')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject')),
            ],
            options={
                'unique_together': {('major', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('salary', models.BigIntegerField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.adminstrationdepartment')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('name', 'study_time')},
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', models.IntegerField(blank=True, null=True)),
                ('time_in', models.DateTimeField(blank=True, null=True)),
                ('time_out', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('student_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student_course')),
            ],
            options={
                'unique_together': {('student_course', 'lesson')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='student_course',
            unique_together={('student', 'course')},
        ),
    ]
